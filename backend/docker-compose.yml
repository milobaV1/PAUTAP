services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    container_name: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432'
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis2
    restart: always
    ports:
      - '6379:6379'
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-backend
    environment:
      - PORT=${PORT}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
    volumes:
      - .:/usr/src/app
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/healthCheck']
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '5050:80'
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  app-network:
    driver: bridge
volumes: # âœ… define the volume here
  pgadmin-data:
